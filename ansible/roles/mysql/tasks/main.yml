---
- name: Install MySQL
  ansible.builtin.apt:
    name:
      - mysql-server
      - python3-mysqldb
    state: present
    update_cache: true

- name: Start MySQL
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: true

- name: Create database
  community.mysql.mysql_db:
    name: "{{ wp_db_name }}"
    state: present

- name: Create DB user
  community.mysql.mysql_user:
    name: "{{ wp_user_name }}"
    host: "{{ address_www }}"
    password: "{{ wp_user_pass }}"
    priv: "{{ wp_db_name }}.*:ALL"
    state: present

- name: Restart MySQL
  ansible.builtin.service:
    name: mysql
    state: restarted

- name: Create Slave user on Master
  when: inventory_hostname in groups['db01']
  community.mysql.mysql_user:
    name: "{{ slave_user_name }}"
    host: "{{ address_db02 }}"
    password: "{{ slave_user_pass }}"
    priv: "*.*:REPLICATION SLAVE,REPLICATION CLIENT"
    state: present

- name: Copy Master's config
  when: inventory_hostname in groups['db01']
  ansible.builtin.template:
    src: templates/mysqld_conf_master.j2
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    backup: true

- name: Copy Slave's config
  when: inventory_hostname in groups['db02']
  ansible.builtin.template:
    src: templates/mysqld_conf_slave.j2
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    backup: true

- name: Restart MySQL
  ansible.builtin.service:
    name: mysql
    state: restarted

- name: Get master bin-log file and position
  when: inventory_hostname in groups['db01']
  community.mysql.mysql_replication:
    mode: getprimary
#  delegate_to: "{{ address_db02 }}"
  register: master_data

- name: Print master variable
  ansible.builtin.debug:
    msg: MASTER {{ master_data }}

- name: Ensure slavery
  when: inventory_hostname in groups['db02']
  community.mysql.mysql_replication:
    mode: changeprimary
    primary_host: "{{ address_db01 }}"
    primary_user: "{{ slave_user_name }}"
    primary_password: "{{ slave_user_pass }}"
    primary_log_file: "{{ hostvars[groups['db01'][0]]['master_data']['File'] }}"
    primary_log_pos: "{{ hostvars[groups['db01'][0]]['master_data']['Position'] }}"

- name: Start slavery
  when: inventory_hostname in groups['db02']
  community.mysql.mysql_replication:
    mode=startreplica

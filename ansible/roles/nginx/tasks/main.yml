---
- name: Wait 300 seconds for conn to be established
  ansible.builtin.wait_for_connection:
    timeout: 300

- name: Install NGINX
  ansible.builtin.apt:
    name: nginx
    state: present
    update_cache: true

- name: Install Certbot for NGINX
  ansible.builtin.package:
    name: "python3-certbot-nginx"
    state: present

- name: Create home directory for WP
  ansible.builtin.file:
    path: "/var/www/{{ base_domain }}"
    state: directory

- name: Install LetsEncrypt
  ansible.builtin.apt:
    name: letsencrypt
    state: present

- name: Makedir for certs
  ansible.builtin.file:
    path: /var/www/letsencrypt
    state: directory

- name: Obtain certificate if not exists
  ansible.builtin.shell: >
    certbot certonly --nginx --register-unsafely-without-email --non-interactive --agree-tos
    -d '{{ base_domain }}'
    -d 'www.{{ base_domain }}'
    -d 'alertmanager.{{ base_domain }}'
    -d 'gitlab.{{ base_domain }}'
    -d 'grafana.{{ base_domain }}'
    -d 'prometheus.{{ base_domain }}'
    {% if workspace == "stage" %} --staging {% endif %}

- name: Disable the default NGINX site
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default"
    state: absent

- name: Copy NGINX config
  ansible.builtin.template:
    src: templates/proxy_conf.j2
    dest: /etc/nginx/conf.d/{{ base_domain }}.conf
    backup: true

- name: Copy SSH config
  ansible.builtin.template:
    src: templates/ssh_conf.j2
    dest: /home/ubuntu/.ssh/config
    backup: true

- name: Copy SSH private key to proxy-ubuntu
  ansible.builtin.copy:
    src: ~/.ssh/id_ed25519
    dest: /home/ubuntu/.ssh/
    mode: "0400"
    owner: ubuntu
    group: ubuntu


- name: Copy SSH private key to proxy-root
  ansible.builtin.copy:
    src: ~/.ssh/id_ed25519
    dest: /root/.ssh/
    mode: "0400"
    owner: root
    group: root


- name: Copy SSH public key to proxy ubuntu
  ansible.builtin.copy:
    src: ~/.ssh/id_ed25519.pub
    dest: /home/ubuntu/.ssh/
    mode: "0644"
    owner: ubuntu
    group: ubuntu


- name: Copy SSH public key to proxy root
  ansible.builtin.copy:
    src: ~/.ssh/id_ed25519.pub
    dest: /root/.ssh/
    mode: "0644"
    owner: root
    group: root

- name: Add internal hosts to known_hosts - root
  ansible.builtin.shell: ssh-keyscan -H {{ item }} >> ~/.ssh/known_hosts
  loop:
    - "{{ address_www }}"
    - "{{ address_alertmanager }}"
    - "{{ address_gitlab }}"
    - "{{ address_grafana }}"
    - "{{ address_prometheus }}"
    - "{{ address_db01 }}"
    - "{{ address_db02 }}"
    - "{{ nat_ip_address }}"

- name: Add internal hosts to known_hosts - ubuntu
  ansible.builtin.shell: ssh-keyscan -H {{ item }} >> /home/ubuntu/.ssh/known_hosts
  loop:
    - "{{ address_www }}"
    - "{{ address_alertmanager }}"
    - "{{ address_gitlab }}"
    - "{{ address_grafana }}"
    - "{{ address_prometheus }}"
    - "{{ address_db01 }}"
    - "{{ address_db02 }}"
    - "{{ nat_ip_address }}"


- name: Copy hosts config
  ansible.builtin.template:
    src: templates/etc_hosts.j2
    dest: /etc/hosts
    backup: true


- name: Restart NGINX  # Избегаем по возможности хэндлеров по причине их малопредсказуемого поведения в некоторых сценариях
  ansible.builtin.service:
    name: nginx
    state: restarted
